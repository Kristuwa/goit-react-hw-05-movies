{"version":3,"file":"static/js/541.4653afb6.chunk.js","mappings":"kOAgDA,UA3Ca,WACX,IAAQA,GAAaC,EAAAA,EAAAA,MAAbD,SACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KAcA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAK,mCAAG,6GAEaC,EAAAA,GAAqBT,GAFlC,OAEJU,EAFI,OAGVN,EAAUM,GAHA,sDAKVJ,GAAS,GACH,IAAIK,MAAJ,MANI,yDAAH,qDASXH,GACD,GAAE,CAACR,KAGF,gCACGG,EAAOS,OAAS,IACf,wBACGT,EAAOU,KAAI,gBAAGC,EAAH,EAAGA,KAAoBC,EAAvB,EAASC,aAA2BC,EAApC,EAAoCA,UAApC,OACV,2BACE,uBAAIH,KACJ,gBACEI,IAAG,0CAAqCH,GACxCI,IAAKL,EACLM,MAAM,KACNC,OAAO,SAET,uCAAeJ,OARRH,EADC,MAcG,IAAlBX,EAAOS,SACN,wEAEDP,IAAS,SAAC,IAAD,CAAciB,QAAQ,yBAGrC,C,+LC7CKC,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAGlB,IAAMC,EAAgB,mCAAG,sGAGpBD,EAAAA,EAAAA,IAAA,sCAAyCD,IAHrB,uBAEpBG,EAFoB,EAE5BC,KAAQD,QAFoB,kBAIvBA,EAAQb,KAAI,kBAAoB,CAAEe,MAAtB,EAAGA,MAA0BC,GAA7B,EAAUA,GAAV,KAJW,2CAAH,qDAOhBC,EAAY,mCAAG,WAAMD,GAAN,qGACHL,EAAAA,EAAAA,IAAA,iBACXK,EADW,oBACGN,EADH,oBADG,uBAClBI,EADkB,EAClBA,KAGAC,EACND,EADMC,MAAOG,EACbJ,EADaI,SAAUC,EACvBL,EADuBK,YAAaC,EACpCN,EADoCM,aAAcC,EAClDP,EADkDO,OAAQC,EAC1DR,EAD0DQ,aAJlC,kBAMnB,CAAEP,MAAAA,EAAOG,SAAAA,EAAUC,YAAAA,EAAaC,aAAAA,EAAcC,OAAAA,EAAQC,aAAAA,IANnC,2CAAH,sDASZC,EAAgB,mCAAG,WAAMP,GAAN,yFACPL,EAAAA,EAAAA,IAAA,iBACXK,EADW,4BACWN,EADX,oBADO,uBACtBI,EADsB,EACtBA,KADsB,kBAIvBA,EAAKU,KAAKxB,KAAI,kBAAwC,CAC3DC,KADmB,EAAGA,KAEtBE,aAFmB,EAASA,aAG5BC,UAHmB,EAAuBA,UAAvB,KAJS,2CAAH,sDAWhBqB,EAAiB,mCAAG,WAAMT,GAAN,yFACRL,EAAAA,EAAAA,IAAA,iBACXK,EADW,4BACWN,EADX,2BADQ,uBACvBI,EADuB,EACvBA,KADuB,kBAIxBA,EAAKD,QAAQb,KAAI,kBAA0B,CAAE0B,OAA5B,EAAGA,OAAiCC,QAApC,EAAWA,QAAX,KAJO,2CAAH,sDAOjBC,EAAoB,mCAAG,WAAMC,GAAN,yFAGxBlB,EAAAA,EAAAA,IAAA,gCACiBD,EADjB,iCACiDmB,EADjD,gCAHwB,uBAExBhB,EAFwB,EAEhCC,KAAQD,QAFwB,kBAM3BA,EAAQb,KAAI,kBAAoB,CAAEe,MAAtB,EAAGA,MAA0BC,GAA7B,EAAUA,GAAV,KANe,2CAAH,qD","sources":["components/Cast/Cast.js","services/api.js"],"sourcesContent":["import { Notification } from 'components/Notification/Notification';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as API from '../../services/api';\n\nconst Cast = () => {\n  const { moviesId } = useParams();\n  const [actors, setActors] = useState([]);\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const response = await API.getMovieByActors(moviesId);\n        setActors(response);\n      } catch (error) {\n        setError(true);\n        throw new Error(error);\n      }\n    };\n    fetch();\n  }, [moviesId]);\n\n  return (\n    <>\n      {actors.length > 0 && (\n        <ul>\n          {actors.map(({ name, profile_path: profilePath, character }) => (\n            <li key={name}>\n              <p>{name}</p>\n              <img\n                src={`https://image.tmdb.org/t/p/w500/${profilePath}`}\n                alt={name}\n                width=\"70\"\n                height=\"100\"\n              />\n              <p>Character: {character}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n      {actors.length === 0 && (\n        <p>We don't have any information for this movie</p>\n      )}\n      {error && <Notification message=\"Please reload page\" />}\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\nconst API_KEY = 'e5b8bd1b82d4f5b68280cf1e2b92e5f6';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n// axios.defaults.headers.common['Authorization'] = API_KEY;\n\nexport const getTrendingFilms = async () => {\n  const {\n    data: { results },\n  } = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return results.map(({ title, id }) => ({ title, id }));\n};\n\nexport const getMovieById = async id => {\n  const { data } = await axios.get(\n    `/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  const { title, overview, poster_path, vote_average, genres, release_date } =\n    data;\n  return { title, overview, poster_path, vote_average, genres, release_date };\n};\n\nexport const getMovieByActors = async id => {\n  const { data } = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data.cast.map(({ name, profile_path, character }) => ({\n    name,\n    profile_path,\n    character,\n  }));\n};\n\nexport const getMovieByReviews = async id => {\n  const { data } = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return data.results.map(({ author, content }) => ({ author, content }));\n};\n\nexport const getMovieBySearchWord = async searchWord => {\n  const {\n    data: { results },\n  } = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&query=${searchWord}&page=1&include_adult=false`\n  );\n  return results.map(({ title, id }) => ({ title, id }));\n};\n"],"names":["moviesId","useParams","useState","actors","setActors","error","setError","useEffect","fetch","API","response","Error","length","map","name","profilePath","profile_path","character","src","alt","width","height","message","API_KEY","axios","getTrendingFilms","results","data","title","id","getMovieById","overview","poster_path","vote_average","genres","release_date","getMovieByActors","cast","getMovieByReviews","author","content","getMovieBySearchWord","searchWord"],"sourceRoot":""}